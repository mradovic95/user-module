name: Build And Push To Code Artifact

on:
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_CODE_ARTIFACT_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CODE_ARTIFACT_USER_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Get CodeArtifact token
        run: |
          echo "Retrieving CodeArtifact auth token..."
          CODE_ARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
          --domain com-comex \
          --domain-owner 925199373191 \
          --region us-east-2 \
          --query authorizationToken \
          --output text)
          echo "CODE_ARTIFACT_AUTH_TOKEN=$CODE_ARTIFACT_AUTH_TOKEN" >> $GITHUB_ENV

      - name: Manage snapshot and release versions
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
          
          # Remove -SNAPSHOT suffix for release version
          RELEASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-SNAPSHOT$//')
          echo "Release version: $RELEASE_VERSION"
          
          # Extract the base version (without -SNAPSHOT if it exists) and increment
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-SNAPSHOT$//')
          echo "Base version (without -SNAPSHOT): $BASE_VERSION"
          
          # Increment the version number, e.g., 0.0.1 -> 0.0.2
          VERSION_PARTS=($(echo $BASE_VERSION | tr '.' '\n'))
          PATCH_VERSION=${VERSION_PARTS[2]} # Extract patch version
          PATCH_VERSION=$((PATCH_VERSION + 1)) # Increment patch version
          
          # Rebuild the base version with the incremented patch version
          NEW_BASE_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
          
          # Set the new snapshot version
          NEXT_SNAPSHOT_VERSION="${NEW_BASE_VERSION}-SNAPSHOT"
          echo "Next snapshot version: $NEXT_SNAPSHOT_VERSION"
          
          # Set the new version in pom.xml
          mvn versions:set -DnewVersion=$NEXT_SNAPSHOT_VERSION
          mvn versions:commit
          
          # Export variables for later steps
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "NEXT_SNAPSHOT_VERSION=$NEXT_SNAPSHOT_VERSION" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - name: Commit version change to Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add pom.xml
          git commit -m "Update version from $CURRENT_VERSION to $NEXT_SNAPSHOT_VERSION"
          git push

      - name: Deploy to AWS CodeArtifact
        run: |
          mvn versions:set -DnewVersion=$RELEASE_VERSION
          mvn clean deploy -s settings.xml
          mvn versions:revert
